{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://docs.guidewire.com/config.schema.json",
  "title": "Config",
  "description": "A config for the doc-portal",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "description": "A link to the JSON schema",
      "type": "string"
    },
    "sources": {
      "description": "A list of sources where we can get files for builds",
      "type": "array",
      "items": {
        "$ref": "#/definitions/source"
      }
    },
    "productFamilies": {
      "description": "A list of available product families, and the products that belong to them",
      "type": "array",
      "items": {
        "$ref": "#/definitions/productFamily"
      }
    },
    "docs": {
      "description": "A list of available docs, along with urls and metadata",
      "type": "array",
      "items": {
        "$ref": "#/definitions/doc"
      }
    },
    "builds": {
      "description": "A list of build configurations which include information about the source, doc, and build parameters",
      "type": "array",
      "items": {
        "$ref": "#/definitions/build"
      }
    }
  },
  "definitions": {
    "id": {
      "description": "A unique ID",
      "type": "string"
    },
    "title": {
      "description": "A human-readable title, for displaying to humans in various human scenarios. All of us humans know what it is. Right, fellow humans?",
      "type": "string"
    },
    "resource": {
      "additionalProperties": false,
      "required": ["targetFolder", "sourceFolder", "srcId"],
      "properties": {
        "targetFolder": {
          "description": "For resources, it is the path where we want to place the resource.",
          "type": "string"
        },
        "sourceFolder": {
          "description": "The folder in the repo to use as the start directory. Copy everything in that folder.",
          "type": "string"
        },
        "srcId": {
          "$ref": "#/definitions/id"
        }
      }
    },
    "environments": {
      "description": "Environments where we will display this doc, dev, int, staging, etc.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["dev", "int", "staging", "prod"]
      }
    },
    "metadata": {
      "description": "Metadata used for classification, search filtering, grouping on landing pages, etc.",
      "type": "object",
      "additionalProperties": false,
      "required": ["product", "platform"],
      "properties": {
        "product": {
          "$ref": "#definitions/product"
        },
        "platform": {
          "description": "The broad category of how we deliver products. Can be Self-managed or Cloud",
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Self-managed", "Cloud"]
          }
        },
        "version": {
          "description": "A version number, or a word like 'latest'",
          "type": "array",
          "examples": ["2020.05", "3.2.0", "latest"]
        },
        "release": {
          "description": "A major release",
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Aspen", "Banff", "Cortina"]
          }
        },
        "subject": {
          "description": "What the doc is about",
          "type": "array",
          "examples": [
            "Administration",
            "Features and functionality",
            "Best practices",
            "Configuration"
          ]
        }
      }
    },
    "source": {
      "description": "A source where we can get files from, for example Git, XDocs, etc.",
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "title", "sourceType", "gitUrl"],
      "properties": {
        "id": {
          "$ref": "#/definitions/id"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "sourceType": {
          "description": "The type of the source",
          "type": "string",
          "enum": ["git", "xdocs"]
        },
        "gitUrl": {
          "description": "An SSH url to a git repo. For all source types, it is a source of files. For the 'xdocs' type, it is also the target where we commit exported files. The 'git' and 'xdocs' types are used by 'docs' components to generate builds.",
          "type": "string"
        },
        "xdocsPathIds": {
          "description": "A list of pathIds to be exported from XDocs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "branch": {
          "description": "The branch to use when checking out. Provide a bare branch name without specification like 'refs/heads', etc.",
          "type": "string",
          "examples": ["release-1.0", "usaa-experimental"]
        },
        "exportFrequency": {
          "description": "How often (daily or weekly) the export for this source runs if there is an associated int build. Defaults to daily if not set.",
          "type": "string",
          "enum": ["daily", "weekly"]
        }
      }
    },
    "productFamily": {
      "type": "object",
      "additionalProperties": false,
      "required": ["productFamilyName", "product"],
      "properties": {
        "productFamilyName": {
          "$ref": "#/definitions/productFamilyName"
        },
        "product": {
          "$ref": "#/definitions/product"
        }
      }
    },
    "productFamilyName": {
      "description": "The name of the product family, for cloud docs only.",
      "type": "string",
      "enum": [
        "BillingCenter Cloud",
        "ClaimCenter Cloud",
        "PolicyCenter Cloud",
        "InsuranceNow",
        "Guidewire Cloud Platform",
        "Guidewire Feature Preview",
        "Integration Framework",
        "Guidewire Cloud Standards"
      ]
    },
    "product": {
      "description": "The name of the product",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "PolicyCenter",
          "BillingCenter",
          "ClaimCenter",
          "ClaimCenter Adapter for IRSA",
          "BillingCenter for Guidewire Cloud",
          "ClaimCenter for Guidewire Cloud",
          "PolicyCenter for Guidewire Cloud",
          "InsuranceSuite Configuration Upgrade Tools",
          "Businessowners Standards Based Template",
          "Commercial Auto Standards Based Template",
          "Crime Standards Based Template",
          "General Liability Standards Based Template",
          "DataHub",
          "DataHub for Guidewire Cloud",
          "InfoCenter",
          "InfoCenter for Guidewire Cloud",
          "Business Analytics",
          "Cloud Data Access",
          "Compare+",
          "Configuration Manager",
          "Explore",
          "CustomerEngage Account Management",
          "CustomerEngage Account Management for ClaimCenter",
          "CustomerEngage Quote and Buy",
          "Digital Code Generation Extension Pack",
          "Guidewire for Salesforce Data Integrations",
          "Guidewire for Salesforce Data Integrations for Claims",
          "Guidewire for Salesforce Digital Gateway",
          "Guidewire for Salesforce Digital Gateway for Claims",
          "Guidewire for Salesforce View on Demand",
          "Guidewire for Salesforce View on Demand for Claims",
          "Guidewire for Salesforce ProducerEngage",
          "Predictive Analytics",
          "ProducerEngage",
          "ProducerEngage for ClaimCenter",
          "ServiceRepEngage",
          "Guidewire Cloud Standards",
          "VendorEngage",
          "Guidewire Cloud Platform",
          "Guidewire Cloud Console",
          "Guidewire Feature Preview",
          "Guidewire Identity Federation Hub",
          "Guidewire InsuranceSuite Package for Germany",
          "InsuranceNow",
          "InsuranceNow 2020.1x - Internal Audience",
          "InsuranceNow 2020.1x - External Audience",
          "InsuranceNow 2020.2x - Internal Audience",
          "InsuranceNow 2020.2x - External Audience",
          "InsuranceNow 2021.1x - Internal Audience",
          "InsuranceNow 2021.1x - External Audience",
          "REST API Client",
          "Jutro Design System",
          "PolicyCenter API",
          "BillingCenter API",
          "ClaimCenter API",
          "String Manager",
          "Checksums",
          "Glossary"
        ]
      }
    },
    "doc": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "url", "metadata", "environments"],
      "properties": {
        "id": {
          "$ref": "#/definitions/id"
        },
        "title": {
          "$ref": "#/definitions/title"
        },
        "url": {
          "description": "The url of the resource we're linking to. Can be relative to the root, or an absolute URL that starts with https://",
          "type": "string"
        },
        "displayOnLandingPages": {
          "description": "If set to false, do not display link on landing page. Defaults to true if not set.",
          "type": "boolean"
        },
        "indexForSearch": {
          "description": "If set to false, do not add the document to the search index. Defaults to true if not set.",
          "type": "boolean"
        },
        "public": {
          "description": "If set to true, users do not have to authenticate to view the document. Defaults to false if not set.",
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metadata"
        },
        "environments": {
          "$ref": "#/definitions/environments"
        }
      }
    },
    "build": {
      "type": "object",
      "additionalProperties": false,
      "required": ["buildType", "docId", "srcId"],
      "properties": {
        "buildType": {
          "description": "The build type to apply",
          "type": "string",
          "enum": ["dita", "dita-dev", "sphinx", "storybook", "yarn"]
        },
        "filter": {
          "description": "The name of the ditaval file to use in the build, including the extension",
          "type": "string",
          "examples": [
            "operator.ditaval",
            "IS-BC-Cloud-Draft.ditaval",
            "audience.xml"
          ]
        },
        "root": {
          "description": "The filename of the ditamap to use, including the extension",
          "examples": ["_superbook.ditamap", "flowers.ditamap", "webhelp.xml"]
        },
        "workingDir": {
          "description": "The working folder where the build commands are executed",
          "examples": ["website", "frontend"]
        },
        "indexRedirect": {
          "description": "If set to true, add a script to the landing page that redirects the user to the first topic in the table of contents. Defaults to false if not set.",
          "type": "boolean"
        },
        "srcId": {
          "$ref": "#/definitions/id"
        },
        "docId": {
          "$ref": "#/definitions/id"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resource"
          }
        },
        "customEnv": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}
