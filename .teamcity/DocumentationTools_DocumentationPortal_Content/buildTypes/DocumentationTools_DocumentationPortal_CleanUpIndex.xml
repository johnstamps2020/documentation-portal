<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>Clean up index</name>
  <description>Remove documents from index which are not in the config</description>
  <settings>
    <parameters>
      <param name="env.CONFIG_FILE_URL" value="https://ditaot.internal.%env.DEPLOY_ENV%.ccs.guidewire.net/portal-config/config.json" spec="text validationMode='not_empty'" />
      <param name="env.CONFIG_FILE_URL_PROD" value="https://ditaot.internal.us-east-2.service.guidewire.net/portal-config/config.json" spec="text validationMode='not_empty'" />
      <param name="env.DEPLOY_ENV" value="" spec="select label='Deployment environment' description='Select an environment on which you want clean up the index' display='prompt' data_1='dev' data_2='int' data_3='staging' data_4='prod'" />
      <param name="env.ELASTICSEARCH_URLS" value="https://docsearch-doctools.%env.DEPLOY_ENV%.ccs.guidewire.net" spec="text validationMode='not_empty'" />
      <param name="env.ELASTICSEARCH_URLS_PROD" value="https://docsearch-doctools.internal.us-east-2.service.guidewire.net" spec="text validationMode='not_empty'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Build a Python Docker image" type="DockerCommand">
        <parameters>
          <param name="command.args" value="--pull" />
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="python-runner" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerImage.platform" value="linux" />
          <param name="dockerfile.path" value="apps/Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Run the cleanup script" type="simpleRunner">
        <parameters>
          <param name="plugin.docker.imageId" value="python-runner" />
          <param name="plugin.docker.imagePlatform" value="linux" />
          <param name="script.content"><![CDATA[#!/bin/bash
set -xe
if [[ "%env.DEPLOY_ENV%" == "prod" ]]; then
    export ELASTICSEARCH_URLS="%env.ELASTICSEARCH_URLS_PROD%"
    export CONFIG_FILE_URL="%env.CONFIG_FILE_URL_PROD%"
fi

curl $CONFIG_FILE_URL > %teamcity.build.workingDir%/config.json
export CONFIG_FILE="%teamcity.build.workingDir%/config.json"                
pip install elasticsearch
cd apps/index_cleaner
python main.py]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="DocumentationTools_DocumentationPortal_vcsrootmasteronly" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

