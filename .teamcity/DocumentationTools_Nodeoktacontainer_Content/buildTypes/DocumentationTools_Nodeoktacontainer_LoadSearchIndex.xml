<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>Delete and load THE ENTIRE search index</name>
  <description />
  <settings>
    <parameters>
      <param name="env.CONFIG_FILE" value="%teamcity.build.workingDir%/.teamcity/config/gw-docs-dev.json" spec="text validationMode='not_empty'" />
      <param name="env.CONFIG_FILE_STAGING" value="%teamcity.build.workingDir%/.teamcity/config/gw-docs-staging.json" spec="text validationMode='not_empty'" />
      <param name="env.CRAWLER_ALLOWED_DOMAINS" value="ditaot.internal.%env.DEPLOY_ENV%.ccs.guidewire.net portal2.guidewire.com" spec="text validationMode='not_empty'" />
      <param name="env.CRAWLER_ALLOWED_DOMAINS_PROD" value="ditaot.internal.us-east-2.service.guidewire.net portal2.guidewire.com" spec="text validationMode='not_empty'" />
      <param name="env.CRAWLER_START_URLS" value="https://ditaot.internal.%env.DEPLOY_ENV%.ccs.guidewire.net" spec="text validationMode='not_empty'" />
      <param name="env.CRAWLER_START_URLS_PROD" value="https://ditaot.internal.us-east-2.service.guidewire.net" spec="text validationMode='not_empty'" />
      <param name="env.DEPLOY_ENV" value="" spec="select display='prompt' data_1='dev' data_2='int' data_3='staging' data_4='prod'" />
      <param name="env.INDEXER_DOCUMENT_KEYS" value="" spec="text validationMode='regex'" />
      <param name="env.INDEXER_INDEX_FILE" value="elastic_search/documents.json" spec="text validationMode='not_empty'" />
      <param name="env.INDEXER_INDEX_NAME" value="gw-docs" spec="text validationMode='not_empty'" />
      <param name="env.INDEXER_SEARCH_APP_URLS" value="https://docsearch-doctools.%env.DEPLOY_ENV%.ccs.guidewire.net" spec="text validationMode='not_empty'" />
      <param name="env.INDEXER_SEARCH_APP_URLS_PROD" value="https://docsearch-doctools.internal.us-east-2.service.guidewire.net" spec="text validationMode='not_empty'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Build a Python Docker image" type="DockerCommand">
        <parameters>
          <param name="command.args" value="--pull" />
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="python-runner" />
          <param name="docker.push.remove.image" value="true" />
          <param name="dockerImage.platform" value="linux" />
          <param name="dockerfile.path" value="Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Collect documents and load index" type="simpleRunner">
        <parameters>
          <param name="plugin.docker.imageId" value="python-runner" />
          <param name="plugin.docker.imagePlatform" value="linux" />
          <param name="script.content"><![CDATA[#!/bin/bash
set -xe
if [[ "%env.DEPLOY_ENV%" == "prod" ]]; then
    export CRAWLER_START_URLS="${CRAWLER_START_URLS_PROD}"
    export CRAWLER_ALLOWED_DOMAINS="${CRAWLER_ALLOWED_DOMAINS_PROD}"
    export INDEXER_SEARCH_APP_URLS="${INDEXER_SEARCH_APP_URLS_PROD}"
fi

if [[ "%env.DEPLOY_ENV%" == "staging" ]] || [[ "%env.DEPLOY_ENV%" == "prod" ]]; then
    export CONFIG_FILE="${CONFIG_FILE_STAGING}"
fi

cd apps
make collect-documents
make load-index]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Publish to S3" type="simpleRunner">
        <parameters>
          <param name="script.content" value="aws s3 sync ./apps/elastic_search/out s3://tenant-doctools-admin-builds/broken-links-reports/%env.DEPLOY_ENV%" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="DocumentationTools_DocumentationPortal_Vcsrootmasteronly" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <build-extensions>
      <extension id="BUILD_EXT_1" type="DockerSupport">
        <parameters>
          <param name="login2registry" value="PROJECT_EXT_155" />
          <param name="loginCheckbox" value="on" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>

