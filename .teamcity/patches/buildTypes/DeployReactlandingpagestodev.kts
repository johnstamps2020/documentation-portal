package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.buildSteps.ScriptBuildStep
import jetbrains.buildServer.configs.kotlin.buildSteps.script
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'DeployReactlandingpagestodev'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("DeployReactlandingpagestodev")) {
    expectSteps {
        script {
            name = "Build the yarn project"
            scriptContent = """
                #!/bin/bash
                                    
                                    export DEPLOY_ENV="dev"
                                    export GW_DOC_ID=""
                                    export GW_PRODUCT=""
                                    export GW_PLATFORM=""
                                    export GW_VERSION=""
                                    export TARGET_URL="https://docs.dev.ccs.guidewire.net"
                                    export BASE_URL="/landing-pages-react/"
                                    
                                    
                                    cd "landing-pages"
                                    yarn install
                                    export EXIT_CODE=0
                yarn build || EXIT_CODE=${'$'}?
                exit ${'$'}EXIT_CODE
            """.trimIndent()
            dockerImagePlatform = ScriptBuildStep.ImagePlatform.Linux
            dockerImage = "artifactory.guidewire.com/hub-docker-remote/node:16.18.0"
            dockerRunParameters = "--user 1000:1000"
        }
        script {
            name = "Upload content to the S3 bucket"
            scriptContent = """
                #!/bin/bash
                                    set -xe
                                    
                                    export AWS_ACCESS_KEY_ID="%env.ATMOS_DEV_AWS_ACCESS_KEY_ID%"
                export AWS_SECRET_ACCESS_KEY="%env.ATMOS_DEV_AWS_SECRET_ACCESS_KEY%"
                export AWS_DEFAULT_REGION="%env.ATMOS_DEV_AWS_DEFAULT_REGION%"
                                    
                                    aws s3 sync "%teamcity.build.checkoutDir%/landing-pages/build" s3://tenant-doctools-dev-builds/landing-pages-react --delete
            """.trimIndent()
            dockerImagePlatform = ScriptBuildStep.ImagePlatform.Linux
            dockerImage = "artifactory.guidewire.com/devex-docker-dev/atmosdeploy:2.6.0"
            dockerRunParameters = "-v /var/run/docker.sock:/var/run/docker.sock -v ${'$'}pwd:/app:ro"
        }
    }
    steps {
        update<ScriptBuildStep>(0) {
            clearConditions()
            scriptContent = """
                #!/bin/bash
                                    
                                    export DEPLOY_ENV="dev"
                                    export GW_DOC_ID=""
                                    export GW_PRODUCT=""
                                    export GW_PLATFORM=""
                                    export GW_VERSION=""
                                    export TARGET_URL="https://docs.dev.ccs.guidewire.net"
                                    export BASE_URL="/landing-pages-react/"
                                    
                                    
                                    cd "landing-pages"
                                    yarn install --frozen-lockfile
                                    export EXIT_CODE=0
                yarn build || EXIT_CODE=${'$'}?
                exit ${'$'}EXIT_CODE
            """.trimIndent()
        }
    }
}
