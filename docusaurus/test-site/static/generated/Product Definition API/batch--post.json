{
  "components": {
    "parameters": {},
    "schemas": {
      "ActivatedEditions": {
        "properties": {
          "editions": {
            "items": {
              "$ref": "#/components/schemas/Edition"
            },
            "type": "array"
          }
        },
        "required": [
          "editions"
        ],
        "type": "object"
      },
      "ActivatedEditionsData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ActivatedEditions"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "BatchRequest": {
        "description": "Defines the structure of a batch request, which consists of an array of sub-requests",
        "properties": {
          "requests": {
            "description": "The array of sub-requests",
            "items": {
              "$ref": "#/components/schemas/BatchSubRequest"
            },
            "type": "array"
          }
        },
        "required": [
          "requests"
        ],
        "type": "object"
      },
      "BatchResponse": {
        "description": "Defines the structure of the response to a batch request.  The 'responses' array will have one element for every entry in the 'requests' array, and responses will appear in the same order.",
        "properties": {
          "responses": {
            "description": "The array of sub-responses, appearing in the same order as the elements in the 'requests' array of the request",
            "items": {
              "$ref": "#/components/schemas/BatchSubResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchSubRequest": {
        "description": "Defines the structure of an individual sub-request of the batch request",
        "properties": {
          "body": {
            "description": "The body of the sub-request, if any",
            "type": "object"
          },
          "headers": {
            "description": "Defines headers that will be included as part of the sub-request.  Any headers defined using this property will override header values inherited from the main request.  Any headers present on the main request that are not defined in this array will be inherited when the sub-request is made, with the exception of the 'GW-Checksum' header.",
            "items": {
              "$ref": "#/components/schemas/Header"
            },
            "type": "array"
          },
          "method": {
            "description": "The HTTP method for the sub-request",
            "enum": [
              "delete",
              "head",
              "get",
              "options",
              "patch",
              "post",
              "put"
            ],
            "type": "string"
          },
          "onFail": {
            "description": "Controls whether or not subsequent sub-requests are processed if this sub-request fails.  The default behavior, if unspecified, is to continue processing sub-request.  The 'abort' option specifies that all subsequent sub-requests will be skipped.",
            "enum": [
              "abort",
              "continue"
            ],
            "type": "string"
          },
          "path": {
            "description": "Specifies the path for the sub-request.  This path is relative to the root of the API hosting the batch endpoint.  For example, if the batch endpoint is <servlet>/rest/common/v1/batch, then a path of '/activities' will mean a request against <servlet>/rest/common/v1/activities.  The path must start with '/' and cannot contain whitespace.",
            "minLength": 1,
            "pattern": "^/[\\S]*$",
            "type": "string"
          },
          "query": {
            "description": "The query string to use for the sub-request, if any",
            "type": "string"
          }
        },
        "required": [
          "method",
          "path"
        ],
        "type": "object"
      },
      "BatchSubResponse": {
        "description": "Defines the format of the sub-response.  In addition to the properties listed here, the 'body' property will include the body of the response as a JSON object.",
        "properties": {
          "body": {
            "description": "The body of the response, if any",
            "type": "object"
          },
          "code": {
            "description": "The HTTP status code for the sub-response",
            "type": "integer"
          },
          "headers": {
            "description": "The headers returned for the sub-response",
            "items": {
              "$ref": "#/components/schemas/Header"
            },
            "type": "array"
          },
          "skipped": {
            "description": "This property will be set to 'true' if the corresponding sub-request was not processed due to a prior failed request that specified the \"onFail\": \"abort\" option",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ClauseHierarchy": {
        "properties": {
          "childClause": {
            "type": "string"
          },
          "editionCode": {
            "type": "string"
          },
          "parentClause": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CostCode": {
        "properties": {
          "chargePattern": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ChargePattern"
          },
          "costCode": {
            "maxLength": 64,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "costName": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "pattern": "\\S",
            "type": "string"
          },
          "overrideable": {
            "type": "boolean"
          },
          "prorationMethod": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ProrationMethod"
          },
          "rateAmountType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "RateAmountType"
          }
        },
        "type": "object"
      },
      "CostCodeData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CostCode"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "CovTermChoice": {
        "properties": {
          "code": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "Currency"
          },
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "packageTerms": {
            "items": {
              "$ref": "#/components/schemas/PackageTerm"
            },
            "type": "array"
          },
          "priority": {
            "type": "integer"
          },
          "refCode": {
            "type": "string"
          },
          "value": {
            "format": "gw-bigdecimal",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CovTermDefault": {
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "Currency"
          },
          "defaultValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CovTermLimits": {
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "Currency"
          },
          "defaultValue": {
            "format": "gw-bigdecimal",
            "type": "string"
          },
          "maxValue": {
            "format": "gw-bigdecimal",
            "type": "string"
          },
          "minValue": {
            "format": "gw-bigdecimal",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CovTermPattern": {
        "properties": {
          "aggregationModel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CovTermModelAgg"
          },
          "choices": {
            "items": {
              "$ref": "#/components/schemas/CovTermChoice"
            },
            "type": "array"
          },
          "covTermType": {
            "type": "string"
          },
          "defaults": {
            "items": {
              "$ref": "#/components/schemas/CovTermDefault"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "limits": {
            "items": {
              "$ref": "#/components/schemas/CovTermLimits"
            },
            "type": "array"
          },
          "modelType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CovTermModelType"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "refCode": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "restrictionModel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CovTermModelRest"
          },
          "rules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "typefilter": {
            "type": "string"
          },
          "typelist": {
            "type": "string"
          },
          "valueType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CovTermModelVal"
          }
        },
        "type": "object"
      },
      "CoverablePattern": {
        "properties": {
          "clauseAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "clauseParentRelationships": {
            "items": {
              "$ref": "#/components/schemas/ClauseHierarchy"
            },
            "type": "array"
          },
          "coverageAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "directChildren": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "exposures": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "fieldAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/MetadataField"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CoverablePatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CoverablePattern"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "CoverageCategory": {
        "properties": {
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "refCode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CoveragePattern": {
        "properties": {
          "clauseType": {
            "type": "string"
          },
          "covTerms": {
            "items": {
              "$ref": "#/components/schemas/CovTermPattern"
            },
            "type": "array"
          },
          "coverageCategory": {
            "$ref": "#/components/schemas/CoverageCategory"
          },
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "refCode": {
            "type": "string"
          },
          "scheduledItemProperties": {
            "items": {
              "$ref": "#/components/schemas/ScheduledItemProperty"
            },
            "type": "array"
          },
          "termAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CoveragePatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CoveragePattern"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "Edition": {
        "properties": {
          "editionCode": {
            "type": "string"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExposurePattern": {
        "properties": {
          "coverable": {
            "type": "string"
          },
          "fieldAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/MetadataField"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExposurePatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExposurePattern"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "Header": {
        "description": "An HTTP request or response header",
        "properties": {
          "name": {
            "description": "The header name",
            "type": "string"
          },
          "value": {
            "description": "The header value",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "LinkObject": {
        "properties": {
          "href": {
            "type": "string"
          },
          "methods": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Links": {
        "additionalProperties": {
          "$ref": "#/components/schemas/LinkObject"
        },
        "type": "object"
      },
      "MetadataField": {
        "properties": {
          "description": {
            "type": "string"
          },
          "fieldProperties": {
            "$ref": "#/components/schemas/MetadataFieldPropertyMap"
          },
          "label": {
            "type": "string"
          },
          "labelKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "referenceTable": {
            "type": "string"
          },
          "referencedType": {
            "type": "string"
          },
          "rules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "type": {
            "type": "string"
          },
          "typelist": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetadataFieldProperty": {
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetadataFieldPropertyMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/MetadataFieldProperty"
        },
        "type": "object"
      },
      "PackageTerm": {
        "properties": {
          "aggregationModel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CovTermModelAgg"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "restrictionModel": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CovTermModelRest"
          },
          "value": {
            "format": "gw-bigdecimal",
            "type": "string"
          },
          "valueType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "CovTermModelVal"
          }
        },
        "type": "object"
      },
      "PolicyLinePattern": {
        "properties": {
          "availableCoverageCurrencies": {
            "items": {
              "$ref": "#/components/schemas/TypeKeyReference",
              "x-gw-typelist": "Currency"
            },
            "type": "array"
          },
          "clauseAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "clauseParentRelationships": {
            "items": {
              "$ref": "#/components/schemas/ClauseHierarchy"
            },
            "type": "array"
          },
          "coverageAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "coverageCategories": {
            "items": {
              "$ref": "#/components/schemas/CoverageCategory"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "editions": {
            "items": {
              "$ref": "#/components/schemas/Edition"
            },
            "type": "array"
          },
          "fieldAvailabilityRules": {
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/MetadataField"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "refCode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PolicyLinePatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PolicyLinePattern"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "PolicyLinePatternQuestion": {
        "properties": {
          "questions": {
            "items": {
              "$ref": "#/components/schemas/QuestionPattern"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PolicyLinePatternQuestions": {
        "properties": {
          "products": {
            "$ref": "#/components/schemas/PolicyLinePatternQuestionsMap"
          }
        },
        "type": "object"
      },
      "PolicyLinePatternQuestionsMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/PolicyLinePatternQuestion"
        },
        "type": "object"
      },
      "PolicyLineQuestionsData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PolicyLinePatternQuestions"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "ProductDefinitionInclusions": {
        "properties": {
          "CoverablePattern": {
            "items": {
              "$ref": "#/components/schemas/CoverablePatternData"
            },
            "type": "array"
          },
          "CoveragePattern": {
            "items": {
              "$ref": "#/components/schemas/CoveragePatternData"
            },
            "type": "array"
          },
          "ExposurePattern": {
            "items": {
              "$ref": "#/components/schemas/ExposurePatternData"
            },
            "type": "array"
          },
          "PolicyLinePattern": {
            "items": {
              "$ref": "#/components/schemas/PolicyLinePatternData"
            },
            "type": "array"
          },
          "QuestionPattern": {
            "items": {
              "$ref": "#/components/schemas/QuestionPatternData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProductPattern": {
        "properties": {
          "abbreviation": {
            "type": "string"
          },
          "availableTermTypes": {
            "items": {
              "$ref": "#/components/schemas/TypeKeyReference",
              "x-gw-typelist": "TermType"
            },
            "type": "array"
          },
          "defaultTermType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "TermType"
          },
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "productAccountType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ProductAccountType"
          },
          "productType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "ProductType"
          },
          "refCode": {
            "type": "string"
          },
          "visualized": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ProductPatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductPattern"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "QuestionChoice": {
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QuestionFilter": {
        "properties": {
          "answer": {
            "type": "string"
          },
          "filterQuestion": {
            "$ref": "#/components/schemas/SimpleReference"
          }
        },
        "type": "object"
      },
      "QuestionPattern": {
        "properties": {
          "choices": {
            "items": {
              "$ref": "#/components/schemas/QuestionChoice"
            },
            "type": "array"
          },
          "defaultAnswer": {
            "type": "string"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/QuestionFilter"
            },
            "type": "array"
          },
          "id": {
            "type": "string"
          },
          "indent": {
            "type": "integer"
          },
          "priority": {
            "type": "integer"
          },
          "questionFormat": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "QuestionFormat"
          },
          "questionSet": {
            "$ref": "#/components/schemas/QuestionSetPattern"
          },
          "questionSetType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "QuestionSetType"
          },
          "questionType": {
            "$ref": "#/components/schemas/TypeKeyReference",
            "x-gw-typelist": "QuestionType"
          },
          "required": {
            "type": "boolean"
          },
          "supplementalTexts": {
            "items": {
              "$ref": "#/components/schemas/QuestionSupplementalText"
            },
            "type": "array"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "QuestionPatternData": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/QuestionPattern"
          },
          "checksum": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/Links",
            "readOnly": true
          },
          "method": {
            "enum": [
              "post",
              "patch"
            ],
            "type": "string"
          },
          "refid": {
            "type": "string"
          },
          "related": {
            "$ref": "#/components/schemas/RelatedCollections",
            "readOnly": true
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "required": [
          "attributes"
        ],
        "type": "object"
      },
      "QuestionSetPattern": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QuestionSupplementalText": {
        "properties": {
          "priority": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReferenceDataInclusions": {
        "type": "object"
      },
      "RelatedCollection": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/SimpleReference"
            },
            "type": "array"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RelatedCollections": {
        "additionalProperties": {
          "$ref": "#/components/schemas/RelatedCollection"
        },
        "type": "object"
      },
      "RuleSet": {
        "properties": {
          "editionCode": {
            "type": "string"
          },
          "jsonLogic": {
            "type": "string"
          },
          "staticValue": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScheduledItemProperty": {
        "properties": {
          "choices": {
            "items": {
              "$ref": "#/components/schemas/CovTermChoice"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "descriptionKey": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameKey": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "valueType": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SimpleReference": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "jsonPath": {
            "readOnly": true,
            "type": "string",
            "x-gw-defaultViews": [
              "none"
            ]
          },
          "refid": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "type": "object",
        "x-gw-resourceReference": true
      },
      "TypeKeyReference": {
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "description": "This property is ignored on updates.",
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "APIs for PolicyCenter product definition metadata",
    "title": "Product Definition API",
    "version": "1.2.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/batch": {
      "post": {
        "description": "Post a list of sub-requests to make against this endpoint.  Sub-requests will be executed serially, in the order they are specified in the \"requests\" property of the input.  Responses to each sub-request will then be batched up and returned all together.  Sub-requests inherit the headers from the main request, with the exception of the GW-Checksum header, but headers can be specified on the sub-request and will override any headers from the main request.",
        "operationId": "batchRequest",
        "parameters": [
          {
            "description": "Controls what response headers, if any, are included for sub-responses.  If unspecified, or set to the value \"*all\", all headers for sub-responses will be returned.  If set to the value \"*none\", no headers for sub-responses will be returned.  Otherwise, this parameter can consist of a comma-separated list of the names of headers that should be included on sub-responses.",
            "explode": false,
            "in": "query",
            "name": "includeResponseHeaders",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchRequest"
              }
            }
          },
          "description": "The body of the batch request",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResponse"
                }
              }
            },
            "description": "The batch request itself was well-formed; individual sub-requests may have succeeded or failed"
          }
        },
        "summary": "Issue multiple requests at once as a non-transactional batch"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:8180/pc/rest/productdefinition/v1"
    }
  ]
}