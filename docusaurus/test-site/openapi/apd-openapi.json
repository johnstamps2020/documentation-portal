{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "name" : "Guidewire Software Inc.",
      "url" : "https://www.guidewire.com/"
    },
    "description" : "Guidewire APD Cloud service",
    "license" : {
      "name" : "CopyrightÂ© 2001-2020 Guidewire Software, Inc."
    },
    "termsOfService" : "https://www.guidewire.com/legal-notices",
    "title" : "APD Cloud API",
    "version" : "0.0.1"
  },
  "servers" : [ {
    "description" : "Development server",
    "url" : "/api/v2"
  } ],
  "security" : [ {
    "guidewire" : [ ]
  } ],
  "paths" : {
    "/products/schema" : {
      "get" : {
        "operationId" : "getProductSchema",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APDSchema"
                }
              }
            },
            "description" : "Json schema enhanced with JsonLogic validation rules"
          }
        },
        "summary" : "Returns the product JSON schema.",
        "tags" : [ "Schema V2" ]
      }
    },
    "/editions/schema" : {
      "get" : {
        "operationId" : "getEditionSchema",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APDSchema"
                }
              }
            },
            "description" : "Json schema enhanced with JsonLogic validation rules"
          }
        },
        "summary" : "Returns the edition JSON schema.",
        "tags" : [ "Schema V2" ]
      }
    },
    "/worksets/{worksetUid}/products" : {
      "post" : {
        "description" : "If a product with the same code does not exist yet in this workset a new product resource is created.",
        "operationId" : "createProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProductRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSummaryData"
                }
              }
            },
            "description" : "Summary information for a product"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Creates a product definition in the specified workset",
        "tags" : [ "Products V2" ]
      },
      "put" : {
        "description" : "If a product with the same code already exists in the workset the existing product's name, description and content will be updated from the product passed into the body of this request.",
        "operationId" : "updateProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The ETag of the old product/edition. The value is used to prevent accidental overrides of edits to the product/edition made by other users. The value must be obtained from a previous API call made to get or update the product/edition.",
          "in" : "header",
          "name" : "If-Match",
          "required" : false,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProductRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSummaryData"
                }
              }
            },
            "description" : "Summary information for a product"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Updates a product definition in the specified workset",
        "tags" : [ "Products V2" ]
      }
    },
    "/worksets/{worksetUid}/productsummaries" : {
      "get" : {
        "operationId" : "getProductSummaries",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSummariesData"
                }
              }
            },
            "description" : "List of product summaries"
          },
          "404" : {
            "description" : "Workset not found"
          }
        },
        "summary" : "Returns summaries for all products in the specified workset, excluding products defined in any parent worksets.",
        "tags" : [ "Products V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}" : {
      "delete" : {
        "operationId" : "deleteProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The resource was deleted successfully."
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Deletes a product from the specified workset",
        "tags" : [ "Products V2" ]
      },
      "get" : {
        "operationId" : "getProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APDProductDTO"
                }
              }
            },
            "description" : "Contents of a product in JSON format"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Returns a product definition from the specified workset",
        "tags" : [ "Products V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/lock" : {
      "delete" : {
        "operationId" : "unlockProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The product was unlocked successfully."
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Unlock product and all its editions in LCM",
        "tags" : [ "Products V2" ]
      },
      "post" : {
        "operationId" : "lockProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LockData"
                }
              }
            },
            "description" : "Summary information for a product and editions after they have been locked"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Lock product and all its editions in LCM",
        "tags" : [ "Products V2" ]
      }
    },
    "/worksets/{worksetUid}/productsummaries/all" : {
      "get" : {
        "operationId" : "getAllProductSummaries",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductSummariesData"
                }
              }
            },
            "description" : "List of product summaries"
          },
          "404" : {
            "description" : "Workset not found"
          }
        },
        "summary" : "Returns all product summaries from the specified workset and all its parents.",
        "tags" : [ "Products V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/validate" : {
      "post" : {
        "operationId" : "validateProductForInstall",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product is valid"
          },
          "400" : {
            "description" : "The product is invalid"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Validates a product so that it can be installed into an application (e.g. PolicyCenter).",
        "tags" : [ "Products V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/install" : {
      "post" : {
        "operationId" : "installProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The unique id of the GCC environment",
          "in" : "query",
          "name" : "environmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the application (e.g. pc)",
          "in" : "query",
          "name" : "applicationCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product was installed succesfully"
          },
          "404" : {
            "description" : "Workset or product not found or the workset is not deployed in the given environment"
          }
        },
        "summary" : "Validates and installs a product into an application such as PolicyCenter.",
        "tags" : [ "Products V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/editions" : {
      "post" : {
        "description" : "If an edition with the same code does not exist yet in this workset a new edition is created.",
        "operationId" : "createEdition",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/EditionRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditionSummaryData"
                }
              }
            },
            "description" : "Summary information for a product edition"
          },
          "400" : {
            "description" : "Edition code already exists in the specified workset"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Created a new edition for a product in the specified workset",
        "tags" : [ "Editions V2" ]
      },
      "put" : {
        "description" : "If a edition with the same code already exists in the workset is is updated based on the request.",
        "operationId" : "updateEdition",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ETag of the old product/edition. The value is used to prevent accidental overrides of edits to the product/edition made by other users. The value must be obtained from a previous API call made to get or update the product/edition.",
          "in" : "header",
          "name" : "If-Match",
          "required" : false,
          "schema" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/EditionRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditionSummaryData"
                }
              }
            },
            "description" : "Summary information for a product edition"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Updates an edition for a product in the specified workset",
        "tags" : [ "Editions V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/editionsummaries" : {
      "get" : {
        "operationId" : "getEditionSummaries",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditionSummariesData"
                }
              }
            },
            "description" : "List of product edition summaries"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Returns all edition summaries from the specified workset, excluding editions defined in any parent worksets.",
        "tags" : [ "Editions V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/editions/{editionCode}" : {
      "delete" : {
        "operationId" : "deleteEdition",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the edition",
          "in" : "path",
          "name" : "editionCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The resource was deleted successfully."
          },
          "400" : {
            "description" : "Deleting Base Edition is not permitted"
          },
          "404" : {
            "description" : "Workset, product or edition not found"
          }
        },
        "summary" : "Deletes the edition from the specified workset",
        "tags" : [ "Editions V2" ]
      },
      "get" : {
        "operationId" : "getEdition",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the edition",
          "in" : "path",
          "name" : "editionCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APDEditionDTO"
                }
              }
            },
            "description" : "Contents of an edition in JSON format"
          },
          "404" : {
            "description" : "Workset, product or edition not found"
          }
        },
        "summary" : "Returns the edition for a product from the specified workset",
        "tags" : [ "Editions V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/editionsummaries/all" : {
      "get" : {
        "operationId" : "getAllEditionSummaries",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EditionSummariesData"
                }
              }
            },
            "description" : "List of product edition summaries"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Returns all product edition summaries from the specified workset and all its parents.",
        "tags" : [ "Editions V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/editions/{editionCode}/rules" : {
      "get" : {
        "operationId" : "getEditionRules",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the edition",
          "in" : "path",
          "name" : "editionCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The format in which the rules are specified",
          "in" : "query",
          "name" : "ruleDialect",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/APDJsonLogicRuleDialectEnum"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonLogicRulesData"
                }
              }
            },
            "description" : "JsonLogic validation rules for a product"
          },
          "404" : {
            "description" : "Workset, product or edition not found"
          }
        },
        "summary" : "Returns the PM rules associated with a product edition",
        "tags" : [ "Editions V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/active" : {
      "get" : {
        "operationId" : "getActiveProduct",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APDProductDTO"
                }
              }
            },
            "description" : "Contents of a product in JSON format"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Returns a product definition either from the specified workset or from one of its parent worksets.",
        "tags" : [ "Runtime V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/editions/active" : {
      "get" : {
        "operationId" : "getActiveEdition",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The jurisdiction the edition or product applies to",
          "in" : "query",
          "name" : "jurisdiction",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The reference date of the product/edition. Will match a product/edition if the reference date is greater or equal than the effective date and less than the expiration date",
          "in" : "query",
          "name" : "referenceDate",
          "required" : true,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APDEditionDTO"
                }
              }
            },
            "description" : "Contents of an edition in JSON format"
          },
          "404" : {
            "description" : "Workset, product or edition not found"
          }
        },
        "summary" : "Returns an edition for a product either from the specified workset or from one of its parent worksets.",
        "tags" : [ "Runtime V2" ]
      }
    },
    "/worksets/{worksetUid}/products/{productCode}/rules/active" : {
      "get" : {
        "operationId" : "getActiveRules",
        "parameters" : [ {
          "description" : "The unique identifier of a workset",
          "in" : "path",
          "name" : "worksetUid",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The unique code of the product",
          "in" : "path",
          "name" : "productCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The jurisdiction the edition or product applies to",
          "in" : "query",
          "name" : "jurisdiction",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The reference date of the product/edition. Will match a product/edition if the reference date is greater or equal than the effective date and less than the expiration date",
          "in" : "query",
          "name" : "referenceDate",
          "required" : true,
          "schema" : {
            "format" : "date-time",
            "type" : "string"
          }
        }, {
          "description" : "The format in which the rules are specified",
          "in" : "query",
          "name" : "ruleDialect",
          "required" : true,
          "schema" : {
            "$ref" : "#/components/schemas/APDJsonLogicRuleDialectEnum"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonLogicRulesData"
                }
              }
            },
            "description" : "JsonLogic validation rules for a product"
          },
          "404" : {
            "description" : "Workset or product not found"
          }
        },
        "summary" : "Returns the PM rules associated with a product",
        "tags" : [ "Runtime V2" ]
      }
    },
    "/convert/json-to-xmind" : {
      "post" : {
        "description" : "Converts a product definition from JSON to XMind format",
        "operationId" : "convertJsonToXmind",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ProductRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Contents of a product in XMind format"
          },
          "400" : {
            "description" : "The product JSON is invalid"
          }
        },
        "summary" : "Converts a product definition from JSON to XMind format",
        "tags" : [ "Convert V2" ]
      }
    },
    "/convert/xmind-to-json" : {
      "post" : {
        "description" : "Converts a product definition from Xmind to JSON format",
        "operationId" : "convertXmindToJson",
        "parameters" : [ {
          "description" : "Language code to use for translated text",
          "in" : "query",
          "name" : "languageCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConvertXmindToJSONRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APDProductDTO"
                }
              }
            },
            "description" : "Contents of a product in JSON format"
          },
          "400" : {
            "description" : "The product Xmind is invalid"
          }
        },
        "summary" : "Converts a product definition from Xmind to JSON format",
        "tags" : [ "Convert V2" ]
      }
    },
    "/convert/xml-to-json" : {
      "post" : {
        "description" : "Converts a product definition from XML to JSON format",
        "operationId" : "convertXmlToJson",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConvertXmlToJsonRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductExportResponse"
                }
              }
            },
            "description" : "Contents of a product and all its editions in JSON format"
          },
          "400" : {
            "description" : "The product XML is invalid"
          }
        },
        "summary" : "Converts a product definition from XML to JSON format",
        "tags" : [ "Convert V2" ]
      }
    },
    "/convert/xml-to-xmind" : {
      "post" : {
        "description" : "Converts a product definition from XML to XMind format",
        "operationId" : "convertXmlToXmind",
        "parameters" : [ {
          "description" : "The name of the carrier submitting the template for conversion",
          "in" : "query",
          "name" : "carrier",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Email address to contact regarding the template",
          "in" : "query",
          "name" : "emailAddress",
          "required" : false,
          "schema" : {
            "format" : "email",
            "type" : "string"
          }
        }, {
          "description" : "The PolicyCenter version used to create the template",
          "in" : "query",
          "name" : "pcVersion",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the APD template file",
          "in" : "query",
          "name" : "filename",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Identifier for the APD template file",
          "in" : "query",
          "name" : "referenceId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/ConvertXmlToXmindRequest"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Contents of a product in XMind format"
          },
          "400" : {
            "description" : "The email address, PC version or product XML is invalid"
          }
        },
        "summary" : "Converts a product definition from XML to XMind format",
        "tags" : [ "Convert V2" ]
      }
    }
  },
  "components" : {
    "requestBodies" : {
      "ProductRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/APDProductDTO"
            }
          }
        },
        "description" : "Contents of a product in JSON format",
        "required" : true
      },
      "EditionRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/APDEditionDTO"
            }
          }
        },
        "description" : "Contents of a product edition in JSON format",
        "required" : true
      },
      "ConvertXmindToJSONRequest" : {
        "content" : {
          "application/octet-stream" : {
            "schema" : {
              "format" : "binary",
              "type" : "string"
            }
          }
        },
        "description" : "Contents of a product in Xmind format."
      },
      "ConvertXmlToJsonRequest" : {
        "content" : {
          "application/xml" : {
            "schema" : {
              "format" : "binary",
              "type" : "string"
            }
          }
        },
        "description" : "Contents of a product in XML format."
      },
      "ConvertXmlToXmindRequest" : {
        "content" : {
          "application/xml" : {
            "schema" : {
              "format" : "binary",
              "type" : "string"
            }
          }
        },
        "description" : "Contents of a product in XML format."
      }
    },
    "schemas" : {
      "APDSchema" : {
        "description" : "Json schema enhanced with JsonLogic validation rules",
        "properties" : {
          "jsonSchema" : {
            "type" : "object"
          },
          "jsonLogicRules" : {
            "items" : {
              "$ref" : "#/components/schemas/JsonLogicRule"
            },
            "type" : "array"
          }
        },
        "required" : [ "jsonSchema" ]
      },
      "JsonLogicRule" : {
        "description" : "A JsonLogic validation rule",
        "properties" : {
          "name" : {
            "description" : "The human readable name of the rule",
            "type" : "string"
          },
          "anchor" : {
            "description" : "A JsonPath expression indicating the object(s) to which the rule applies",
            "type" : "string"
          },
          "expression" : {
            "description" : "The JsonLogic validation expression",
            "type" : "object"
          }
        },
        "required" : [ "anchor", "expression", "name" ]
      },
      "ProductSummaryData" : {
        "description" : "Summary information for a product",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ProductSummary"
          }
        },
        "required" : [ "data" ]
      },
      "ProductSummary" : {
        "description" : "Summary information for a product",
        "properties" : {
          "name" : {
            "description" : "Name of the product",
            "type" : "string"
          },
          "description" : {
            "description" : "Description of the product",
            "type" : "string"
          },
          "code" : {
            "description" : "Code identifier of the product",
            "type" : "string"
          },
          "abbreviation" : {
            "description" : "Abbreviation of the product",
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/APDProductCategoryEnum"
          },
          "lines" : {
            "description" : "Names of all lines of the product",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "modificationDate" : {
            "description" : "Modification date of the product",
            "format" : "date-time",
            "type" : "string"
          },
          "modificationUser" : {
            "description" : "User who modified the product",
            "type" : "string"
          },
          "worksetUid" : {
            "description" : "UUID of the parent workset",
            "format" : "uuid",
            "type" : "string"
          },
          "resourceUid" : {
            "description" : "UUID of the product",
            "format" : "uuid",
            "type" : "string"
          },
          "etag" : {
            "description" : "The ETag of the old version of the resource/workset. Used to prevent accidental overrides of edits to the product made by other users. The value must be passed to all APIs which modify the same product in the If-Match header.",
            "type" : "string"
          },
          "lockedBy" : {
            "description" : "If provided, identifies user who has locked the resource",
            "type" : "string"
          }
        },
        "required" : [ "abbreviation", "code", "description", "name", "resourceUid" ]
      },
      "ProductSummariesData" : {
        "description" : "List of product summaries",
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductSummary"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ]
      },
      "APDProductDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/code"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDProductDTO_allOf"
        } ],
        "required" : [ "abbreviation", "category", "coinsurance", "currencies", "name", "schemaVersion", "usesLocationListView", "writtenByThirdParty" ]
      },
      "APDCurrencyHandlingTypeEnum" : {
        "default" : "domestic",
        "enum" : [ "domestic", "single", "basicmulti", "fullmulti" ],
        "type" : "string"
      },
      "APDProductCategoryEnum" : {
        "default" : "Any",
        "enum" : [ "Person", "Company", "Any" ],
        "type" : "string"
      },
      "APDProductLineDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/APDRiskObjectDTO"
        } ],
        "properties" : {
          "prefix" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "useStoredProductEditionForRenewal" : {
            "type" : "boolean"
          },
          "useStoredProductEditionForPolicyChange" : {
            "type" : "boolean"
          },
          "currencies" : {
            "$ref" : "#/components/schemas/APDCurrencyHandlingTypeEnum"
          },
          "typelists" : {
            "items" : {
              "$ref" : "#/components/schemas/APDTypelistDTO"
            },
            "type" : "array"
          },
          "explicitTypeName" : {
            "description" : "Override for PCs entity type name for installed product. Optional, if not provided, we fall back to `code`.",
            "maxLength" : 22,
            "type" : "string"
          }
        },
        "required" : [ "currencies", "name", "prefix", "riskLocationType", "riskObjectType", "useStoredProductEditionForPolicyChange", "useStoredProductEditionForRenewal" ]
      },
      "APDRiskObjectDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/code"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDRiskObjectDTO_allOf"
        } ],
        "discriminator" : {
          "propertyName" : "subtype"
        },
        "required" : [ "name", "riskLocationType", "riskObjectType" ]
      },
      "APDRiskObjectTypeEnum" : {
        "enum" : [ "prop", "propwithliab", "liabsingle", "liabmulti", "comb", "other" ],
        "type" : "string"
      },
      "APDFieldDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/APDAttributeDTO"
        } ],
        "properties" : {
          "identifier" : {
            "type" : "boolean"
          }
        },
        "required" : [ "name", "sequence", "splitByRatingPeriods", "type" ]
      },
      "APDAttributeDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/code"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDAttributeDTO_allOf"
        } ],
        "discriminator" : {
          "propertyName" : "subtype"
        }
      },
      "APDAttributeTypeEnum" : {
        "enum" : [ "boolean", "date", "bigdecimal", "typekey", "integer", "location", "money", "party", "varchar" ],
        "type" : "string"
      },
      "APDDropdownTypeEnum" : {
        "enum" : [ "typelist", "option", "package" ],
        "type" : "string"
      },
      "APDDropdownColumnDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/APDDropdownColumnDTO_allOf"
        } ],
        "required" : [ "sequence" ]
      },
      "APDDropdownColumnValueTypeEnum" : {
        "enum" : [ "money", "percent", "days", "hours", "count", "other", "boolean" ],
        "type" : "string"
      },
      "APDDropdownOptionDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/optionCode"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDDropdownOptionDTO_allOf"
        } ],
        "required" : [ "name" ]
      },
      "APDDropdownValueDTO" : {
        "properties" : {
          "integerValue" : {
            "type" : "integer"
          },
          "decimalValue" : {
            "type" : "string"
          },
          "dropdownColumn" : {
            "type" : "integer"
          }
        },
        "required" : [ "dropdownColumn" ]
      },
      "APDExposureDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/codeMax22"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDExposureDTO_allOf"
        } ],
        "required" : [ "exposureType", "isAutoNumbered", "name", "ratingType", "riskLocationType" ]
      },
      "APDExposureTypeEnum" : {
        "enum" : [ "prop", "liab", "contact", "other" ],
        "type" : "string"
      },
      "APDRiskLocationTypeEnum" : {
        "enum" : [ "refLocation", "useParent" ],
        "type" : "string"
      },
      "APDExposureFieldDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/APDAttributeDTO"
        } ],
        "properties" : {
          "exposureParty" : {
            "type" : "boolean"
          },
          "basisScalingKey" : {
            "default" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "exposureParty", "name", "sequence", "splitByRatingPeriods", "type" ]
      },
      "APDClauseCategoryDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/code"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDClauseCategoryDTO_allOf"
        } ],
        "required" : [ "hidden", "itemized", "name" ]
      },
      "APDCoverageDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/APDClauseDTO"
        }, {
          "$ref" : "#/components/schemas/APDCoverageDTO_allOf"
        } ],
        "required" : [ "pricingOrder", "separateBilling", "separateCollection" ]
      },
      "APDClauseDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/code"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDClauseDTO_allOf"
        } ],
        "discriminator" : {
          "mapping" : {
            "coverage" : "#/components/schemas/APDCoverageDTO",
            "exclusion" : "#/components/schemas/APDExclusionDTO",
            "condition" : "#/components/schemas/APDConditionDTO"
          },
          "propertyName" : "clauseType"
        },
        "required" : [ "clauseType", "name" ]
      },
      "APDTermDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/APDAttributeDTO"
        } ],
        "properties" : {
          "scheduleItemAttribute" : {
            "default" : false,
            "type" : "boolean"
          },
          "generateAsClauseTerm" : {
            "default" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "name", "scheduleItemAttribute", "sequence", "splitByRatingPeriods", "type" ]
      },
      "APDScheduledItemDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/codeMax22"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDScheduledItemDTO_allOf"
        } ]
      },
      "APDExclusionDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/APDClauseDTO"
        } ]
      },
      "APDConditionDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/APDClauseDTO"
        } ]
      },
      "APDCostDefinitionDTO" : {
        "properties" : {
          "costCode" : {
            "$ref" : "#/components/schemas/APDCostCodeEnum"
          },
          "pricingOrder" : {
            "type" : "integer"
          },
          "separateBilling" : {
            "default" : false,
            "type" : "boolean"
          },
          "separateCollection" : {
            "default" : false,
            "type" : "boolean"
          },
          "basis" : {
            "description" : "e.g. product.lines[pa].clause[foo].term[bar]",
            "type" : "string"
          }
        },
        "required" : [ "costCode", "pricingOrder" ]
      },
      "APDCostCodeEnum" : {
        "enum" : [ "gst", "incomePrem", "ipt", "premium", "stampDuty", "tax", "vat" ],
        "type" : "string"
      },
      "APDCoveragePerilDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/lowercaseCode"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/APDCoveragePerilDTO_allOf"
        } ]
      },
      "APDCoverageCoveredCostDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/lowercaseCode"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        } ]
      },
      "APDTypelistDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/code"
        }, {
          "$ref" : "#/components/schemas/APDTypelistDTO_allOf"
        } ]
      },
      "LockData" : {
        "description" : "Summary data for locked/unlocked product and editions",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LockSummary"
          }
        },
        "required" : [ "data" ]
      },
      "LockSummary" : {
        "description" : "Summary data for locked/unlocked product and editions",
        "properties" : {
          "product" : {
            "$ref" : "#/components/schemas/ProductSummary"
          },
          "editions" : {
            "items" : {
              "$ref" : "#/components/schemas/EditionSummary"
            },
            "type" : "array"
          }
        },
        "required" : [ "product" ]
      },
      "EditionSummary" : {
        "description" : "Summary information for a product edition",
        "properties" : {
          "name" : {
            "description" : "Name of the edition",
            "type" : "string"
          },
          "description" : {
            "description" : "Description of the edition",
            "type" : "string"
          },
          "code" : {
            "description" : "Code identifier of the edition",
            "type" : "string"
          },
          "productCode" : {
            "description" : "Code identifier of the product",
            "type" : "string"
          },
          "resourceUid" : {
            "description" : "UUID of the edition",
            "format" : "uuid",
            "type" : "string"
          },
          "worksetUid" : {
            "description" : "UUID of the workset",
            "format" : "uuid",
            "type" : "string"
          },
          "effectiveDate" : {
            "description" : "Effective date of the edition",
            "format" : "date-time",
            "type" : "string"
          },
          "effectiveTimeZone" : {
            "description" : "Time zone of effective date field",
            "type" : "string"
          },
          "expirationDate" : {
            "description" : "Expiration date of the edition",
            "format" : "date-time",
            "type" : "string"
          },
          "expirationTimeZone" : {
            "description" : "Time zone of expiration date field",
            "type" : "string"
          },
          "modificationDate" : {
            "description" : "Modification date of the edition",
            "format" : "date-time",
            "type" : "string"
          },
          "jurisdictions" : {
            "description" : "Jurisdictions associated to the edition",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "etag" : {
            "description" : "The ETag of the old version of the resource/workset. Used to prevent accidental overrides of edits to the product made by other users. The value must be passed to all APIs which modify the same product in the If-Match header.",
            "type" : "string"
          }
        },
        "required" : [ "code", "description", "name" ]
      },
      "EditionSummaryData" : {
        "description" : "Summary information for a product edition",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EditionSummary"
          }
        },
        "required" : [ "data" ]
      },
      "EditionSummariesData" : {
        "description" : "List of product edition summaries",
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/EditionSummary"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ]
      },
      "APDEditionDTO" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/lowercaseCode"
        }, {
          "$ref" : "#/components/schemas/localizedName"
        }, {
          "$ref" : "#/components/schemas/localizedDescription"
        }, {
          "$ref" : "#/components/schemas/APDEditionDTO_allOf"
        } ],
        "required" : [ "code", "jurisdictions", "name", "product", "schemaVersion" ]
      },
      "APDEditionProductDTO" : {
        "properties" : {
          "code" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "lines" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionRiskObjectDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "code" ]
      },
      "APDEditionRiskObjectDTO" : {
        "properties" : {
          "code" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "fields" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionAttributeDTO"
            },
            "maxItems" : 100,
            "type" : "array"
          },
          "riskObjects" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionRiskObjectDTO"
            },
            "type" : "array"
          },
          "exposures" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionExposureDTO"
            },
            "type" : "array"
          },
          "coverages" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionClauseDTO"
            },
            "type" : "array"
          },
          "exclusions" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionClauseDTO"
            },
            "type" : "array"
          },
          "conditions" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionClauseDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "code" ]
      },
      "APDEditionAttributeDTO" : {
        "properties" : {
          "code" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionDropdownOptionDTO"
            },
            "maxItems" : 100,
            "type" : "array"
          },
          "rules" : {
            "items" : {
              "$ref" : "#/components/schemas/APDRuleDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "code" ]
      },
      "APDEditionDropdownOptionDTO" : {
        "properties" : {
          "code" : {
            "maxLength" : 45,
            "type" : "string"
          },
          "rules" : {
            "items" : {
              "$ref" : "#/components/schemas/APDRuleDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "code" ]
      },
      "APDEditionExposureDTO" : {
        "properties" : {
          "code" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "exposureFields" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionAttributeDTO"
            },
            "maxItems" : 100,
            "type" : "array"
          }
        },
        "required" : [ "code" ]
      },
      "APDEditionClauseDTO" : {
        "properties" : {
          "code" : {
            "maxLength" : 45,
            "type" : "string"
          },
          "terms" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionAttributeDTO"
            },
            "maxItems" : 100,
            "type" : "array"
          },
          "rules" : {
            "items" : {
              "$ref" : "#/components/schemas/APDRuleDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "code" ]
      },
      "APDJsonLogicRuleDialectEnum" : {
        "enum" : [ "PC" ],
        "type" : "string"
      },
      "JsonLogicRulesData" : {
        "properties" : {
          "data" : {
            "items" : {
              "$ref" : "#/components/schemas/APDJsonLogicRuleDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "data" ]
      },
      "ProductExportResponse" : {
        "description" : "Contents of a product and all its editions",
        "properties" : {
          "product" : {
            "$ref" : "#/components/schemas/APDProductDTO"
          },
          "editions" : {
            "items" : {
              "$ref" : "#/components/schemas/APDEditionDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "editions", "product" ]
      },
      "code" : {
        "properties" : {
          "code" : {
            "maxLength" : 255,
            "pattern" : "[A-Z][A-Za-z0-9_]*",
            "type" : "string"
          }
        },
        "required" : [ "code" ]
      },
      "localizedName" : {
        "properties" : {
          "name" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "name_L10N_ARRAY" : {
            "items" : {
              "$ref" : "#/components/schemas/APDLocalizationDTO"
            },
            "type" : "array"
          }
        }
      },
      "APDLocalizationDTO" : {
        "properties" : {
          "language" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "value" : {
            "maxLength" : 255,
            "type" : "string"
          }
        }
      },
      "localizedDescription" : {
        "properties" : {
          "description" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "description_L10N_ARRAY" : {
            "items" : {
              "$ref" : "#/components/schemas/APDLocalizationDTO"
            },
            "type" : "array"
          }
        }
      },
      "WorksetStatus" : {
        "enum" : [ "draft", "production" ],
        "type" : "string"
      },
      "optionCode" : {
        "properties" : {
          "code" : {
            "maxLength" : 45,
            "pattern" : "[A-Za-z0-9][A-Za-z0-9$_]*",
            "type" : "string"
          }
        },
        "required" : [ "code" ]
      },
      "codeMax22" : {
        "properties" : {
          "code" : {
            "maxLength" : 22,
            "pattern" : "[A-Z][A-Za-z0-9$_]*",
            "type" : "string"
          }
        },
        "required" : [ "code" ]
      },
      "lowercaseCode" : {
        "properties" : {
          "code" : {
            "maxLength" : 255,
            "pattern" : "[A-Za-z][A-Za-z0-9$_]*",
            "type" : "string"
          }
        },
        "required" : [ "code" ]
      },
      "APDRuleDTO" : {
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/APDRuleTypeEnum"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "defaultValueTimezone" : {
            "type" : "string"
          },
          "defaultCalculatedValue" : {
            "$ref" : "#/components/schemas/APDRuleFunctionDTO"
          },
          "tagType" : {
            "$ref" : "#/components/schemas/APDTagTypeEnum"
          },
          "elements" : {
            "items" : {
              "$ref" : "#/components/schemas/APDRuleElementDTO"
            },
            "type" : "array"
          }
        },
        "required" : [ "type" ]
      },
      "APDRuleTypeEnum" : {
        "enum" : [ "existence", "default", "min", "max", "tag" ],
        "type" : "string"
      },
      "APDRuleFunctionDTO" : {
        "properties" : {
          "function" : {
            "$ref" : "#/components/schemas/APDRuleFunctionEnum"
          },
          "arguments" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "function" ]
      },
      "APDRuleFunctionEnum" : {
        "enum" : [ "min", "max", "sum", "ref" ],
        "type" : "string"
      },
      "APDTagTypeEnum" : {
        "enum" : [ "rate", "submission", "riskscore" ],
        "type" : "string"
      },
      "APDRuleElementDTO" : {
        "properties" : {
          "sequence" : {
            "type" : "integer"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "defaultValueTimezone" : {
            "type" : "string"
          },
          "conditions" : {
            "items" : {
              "$ref" : "#/components/schemas/APDRuleConditionDTO"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "conditions", "sequence" ]
      },
      "APDRuleConditionDTO" : {
        "properties" : {
          "target" : {
            "description" : "e.g. product.lines[pa].clause[foo].term[bar]",
            "type" : "string"
          },
          "operator" : {
            "$ref" : "#/components/schemas/APDRuleConditionOperatorEnum"
          },
          "value" : {
            "type" : "string"
          },
          "valueTimezone" : {
            "type" : "string"
          }
        },
        "required" : [ "operator", "target" ]
      },
      "APDRuleConditionOperatorEnum" : {
        "enum" : [ "equals", "notEquals", "lessThan", "lessThanOrEqual", "greaterThan", "greaterThanOrEqual", "selected", "notSelected" ],
        "type" : "string"
      },
      "APDJsonLogicRuleDTO" : {
        "description" : "A JsonLogic validation rule",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/APDRuleTypeEnum"
          },
          "anchor" : {
            "description" : "A JsonPath expression indicating the object(s) to which the rule applies",
            "type" : "string"
          },
          "expression" : {
            "description" : "The JsonLogic validation expression",
            "type" : "object"
          }
        },
        "required" : [ "anchor", "expression", "type" ]
      },
      "APDProductDTO_allOf" : {
        "properties" : {
          "schemaVersion" : {
            "type" : "string"
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorksetStatus"
            } ],
            "readOnly" : true
          },
          "abbreviation" : {
            "maxLength" : 3,
            "type" : "string"
          },
          "coinsurance" : {
            "default" : false,
            "type" : "boolean"
          },
          "currencies" : {
            "$ref" : "#/components/schemas/APDCurrencyHandlingTypeEnum"
          },
          "category" : {
            "$ref" : "#/components/schemas/APDProductCategoryEnum"
          },
          "usesLocationListView" : {
            "default" : false,
            "type" : "boolean"
          },
          "writtenByThirdParty" : {
            "default" : false,
            "type" : "boolean"
          },
          "lines" : {
            "items" : {
              "$ref" : "#/components/schemas/APDProductLineDTO"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "APDRiskObjectDTO_allOf" : {
        "properties" : {
          "subtype" : {
            "type" : "string"
          },
          "riskObjectType" : {
            "$ref" : "#/components/schemas/APDRiskObjectTypeEnum"
          },
          "menuLabel" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "menuLabel_L10N_ARRAY" : {
            "items" : {
              "$ref" : "#/components/schemas/APDLocalizationDTO"
            },
            "type" : "array"
          },
          "childrenLabel" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "childrenLabel_L10N_ARRAY" : {
            "items" : {
              "$ref" : "#/components/schemas/APDLocalizationDTO"
            },
            "type" : "array"
          },
          "fields" : {
            "items" : {
              "$ref" : "#/components/schemas/APDFieldDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          },
          "riskObjects" : {
            "items" : {
              "$ref" : "#/components/schemas/APDRiskObjectDTO"
            },
            "type" : "array"
          },
          "exposureLabel" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "exposureLabel_L10N_ARRAY" : {
            "items" : {
              "$ref" : "#/components/schemas/APDLocalizationDTO"
            },
            "type" : "array"
          },
          "exposures" : {
            "items" : {
              "$ref" : "#/components/schemas/APDExposureDTO"
            },
            "type" : "array"
          },
          "clauseCategories" : {
            "items" : {
              "$ref" : "#/components/schemas/APDClauseCategoryDTO"
            },
            "type" : "array"
          },
          "coverages" : {
            "items" : {
              "$ref" : "#/components/schemas/APDCoverageDTO"
            },
            "type" : "array"
          },
          "exclusions" : {
            "items" : {
              "$ref" : "#/components/schemas/APDExclusionDTO"
            },
            "type" : "array"
          },
          "conditions" : {
            "items" : {
              "$ref" : "#/components/schemas/APDConditionDTO"
            },
            "type" : "array"
          },
          "isAutoNumbered" : {
            "default" : true,
            "type" : "boolean"
          },
          "riskLocationType" : {
            "$ref" : "#/components/schemas/APDRiskLocationTypeEnum"
          },
          "separateBilling" : {
            "default" : false,
            "type" : "boolean"
          },
          "separateCollection" : {
            "default" : false,
            "type" : "boolean"
          },
          "writtenByThirdParty" : {
            "default" : false,
            "type" : "boolean"
          },
          "costDefinitions" : {
            "items" : {
              "$ref" : "#/components/schemas/APDCostDefinitionDTO"
            },
            "type" : "array"
          }
        }
      },
      "APDAttributeDTO_allOf" : {
        "properties" : {
          "category" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "subtype" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer"
          },
          "splitByRatingPeriods" : {
            "default" : false,
            "type" : "boolean"
          },
          "scalable" : {
            "default" : false,
            "type" : "boolean"
          },
          "jurisdiction" : {
            "default" : false,
            "type" : "boolean"
          },
          "doNotRegenerate" : {
            "type" : "boolean"
          },
          "type" : {
            "$ref" : "#/components/schemas/APDAttributeTypeEnum"
          },
          "dropdownType" : {
            "$ref" : "#/components/schemas/APDDropdownTypeEnum"
          },
          "typelist" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "isDropDownOwner" : {
            "type" : "boolean"
          },
          "dropdownColumns" : {
            "items" : {
              "$ref" : "#/components/schemas/APDDropdownColumnDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          },
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/APDDropdownOptionDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          }
        }
      },
      "APDDropdownColumnDTO_allOf" : {
        "properties" : {
          "sequence" : {
            "type" : "integer"
          },
          "valueType" : {
            "$ref" : "#/components/schemas/APDDropdownColumnValueTypeEnum"
          }
        }
      },
      "APDDropdownOptionDTO_allOf" : {
        "properties" : {
          "sequence" : {
            "type" : "integer"
          },
          "currency" : {
            "enum" : [ "usd", "eur", "gbp", "cad", "aud", "rub", "jpy" ],
            "type" : "string"
          },
          "values" : {
            "items" : {
              "$ref" : "#/components/schemas/APDDropdownValueDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          }
        }
      },
      "APDExposureDTO_allOf" : {
        "properties" : {
          "contactRole" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "exposureType" : {
            "$ref" : "#/components/schemas/APDExposureTypeEnum"
          },
          "isAutoNumbered" : {
            "type" : "boolean"
          },
          "menuLabel" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "menuLabel_L10N_ARRAY" : {
            "items" : {
              "$ref" : "#/components/schemas/APDLocalizationDTO"
            },
            "type" : "array"
          },
          "ratingType" : {
            "maxLength" : 255,
            "type" : "string"
          },
          "riskLocationType" : {
            "$ref" : "#/components/schemas/APDRiskLocationTypeEnum"
          },
          "exposureFields" : {
            "items" : {
              "$ref" : "#/components/schemas/APDExposureFieldDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          }
        }
      },
      "APDClauseCategoryDTO_allOf" : {
        "properties" : {
          "sequence" : {
            "type" : "integer"
          },
          "hidden" : {
            "default" : false,
            "type" : "boolean"
          },
          "itemized" : {
            "default" : false,
            "type" : "boolean"
          }
        }
      },
      "APDCoverageDTO_allOf" : {
        "properties" : {
          "separateBilling" : {
            "description" : "coverage specific pricing prop",
            "type" : "boolean"
          },
          "separateCollection" : {
            "description" : "coverage specific pricing prop",
            "type" : "boolean"
          },
          "pricingOrder" : {
            "description" : "coverage specific pricing prop",
            "type" : "integer"
          },
          "costDefinitions" : {
            "description" : "coverage specific pricing prop",
            "items" : {
              "$ref" : "#/components/schemas/APDCostDefinitionDTO"
            },
            "type" : "array"
          },
          "coveredEvents" : {
            "description" : "perils included in this coverage",
            "items" : {
              "$ref" : "#/components/schemas/APDCoveragePerilDTO"
            },
            "type" : "array"
          },
          "coveredCosts" : {
            "description" : "covered cost categories",
            "items" : {
              "$ref" : "#/components/schemas/APDCoverageCoveredCostDTO"
            },
            "type" : "array"
          }
        }
      },
      "APDClauseDTO_allOf" : {
        "properties" : {
          "clauseType" : {
            "enum" : [ "coverage", "exclusion", "condition" ],
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer"
          },
          "terms" : {
            "items" : {
              "$ref" : "#/components/schemas/APDTermDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          },
          "scheduledItem" : {
            "$ref" : "#/components/schemas/APDScheduledItemDTO"
          },
          "parentClause" : {
            "description" : "e.g. product.lines[pa].clause[foo]",
            "type" : "string"
          },
          "clauseCategory" : {
            "description" : "should match the 'code' of an existing clause category",
            "type" : "string"
          }
        }
      },
      "APDScheduledItemDTO_allOf" : {
        "properties" : {
          "terms" : {
            "items" : {
              "$ref" : "#/components/schemas/APDTermDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          }
        }
      },
      "APDCoveragePerilDTO_allOf" : {
        "properties" : {
          "limit" : {
            "type" : "string"
          },
          "deductible" : {
            "type" : "string"
          },
          "limitAttribute" : {
            "description" : "e.g. product.lines[pa].clause[foo].terms[bar]",
            "type" : "string"
          },
          "deductibleAttribute" : {
            "description" : "e.g. product.lines[pa].clause[foo].terms[bar]",
            "type" : "string"
          }
        }
      },
      "APDTypelistDTO_allOf" : {
        "properties" : {
          "options" : {
            "items" : {
              "$ref" : "#/components/schemas/APDDropdownOptionDTO"
            },
            "maxItems" : 1000,
            "type" : "array"
          }
        }
      },
      "APDEditionDTO_allOf" : {
        "properties" : {
          "schemaVersion" : {
            "type" : "string"
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WorksetStatus"
            } ],
            "readOnly" : true
          },
          "effectiveDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "effectiveTimeZone" : {
            "type" : "string"
          },
          "expirationDate" : {
            "format" : "date-time",
            "type" : "string"
          },
          "expirationTimeZone" : {
            "type" : "string"
          },
          "jurisdictions" : {
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "worksetUid" : {
            "format" : "uuid",
            "type" : "string"
          },
          "product" : {
            "$ref" : "#/components/schemas/APDEditionProductDTO"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "guidewire" : {
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://guidewire-hub.oktapreview.com/oauth2/ausj9ftnbxOqfGU4U0h7/v1/authorize",
            "scopes" : {
              "tenant_id" : "Guidewire tenant id scope (Required)",
              "groups" : "Obtains group memberships",
              "openid" : "OpenId scope (Required)",
              "apds.products.read" : "Allows the reading of products",
              "apds.products.write" : "Allows the creation of products",
              "apds.products.delete" : "Allows the deletion of products",
              "apds.products.install" : "Allows the installation of products"
            },
            "tokenUrl" : "https://guidewire-hub.oktapreview.com/oauth2/ausj9ftnbxOqfGU4U0h7/v1/token"
          }
        },
        "type" : "oauth2"
      }
    }
  }
}