version: '3.8'
services:
  server:
    networks:
      - docportal_network
    image: artifactory.guidewire.com/hub-docker-remote/node:18.18.2
    container_name: server
    restart: on-failure
    environment:
      - NODE_ENV=development
      - NPM_AUTH_TOKEN=${NPM_AUTH_TOKEN}
    ports:
      - "8081:8081"
    volumes:
      - ..:/usr/app
      - node_modules:/usr/app/node_modules
    working_dir: /usr/app
    command: bash -c "yarn install && yarn dev:server"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://server:8081/alive" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      db:
        condition: service_healthy
  landing-pages:
    networks:
      - docportal_network
    image: artifactory.guidewire.com/hub-docker-remote/node:18.18.2
    container_name: landing-pages
    restart: on-failure
    environment:
      - NODE_ENV=development
      - NPM_AUTH_TOKEN=${NPM_AUTH_TOKEN}
    ports:
      - "6006:6006"
    volumes:
      - ..:/usr/app
      - node_modules:/usr/app/node_modules
    working_dir: /usr/app
    command: yarn dev:landing-pages
    depends_on:
      server:
        condition: service_healthy
  db:
    networks:
      - docportal_network
    image: artifactory.guidewire.com/hub-docker-remote/postgres:13.9-alpine
    container_name: db
    restart: on-failure
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_PASSWORD: testtesttest
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres-client:
    networks:
      - docportal_network
    image: artifactory.guidewire.com/hub-docker-remote/postgres:13.9-alpine
    container_name: postgres-client
    environment:
      PGUSER: postgres
      PGPASSWORD: testtesttest
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "6666:5432"
    entrypoint: bash -c "cd /tmp && rm -rf docportalconfig.zip docportalconfig && wget https://docportal-content.staging.ccs.guidewire.net/zip/docportalconfig.zip && unzip docportalconfig.zip && pg_restore --clean --if-exists -h db -d postgres -W docportalconfig"
    depends_on:
      db:
        condition: service_healthy
  search:
    image: artifactory.guidewire.com/hub-docker-remote/elasticsearch:8.11.1
    container_name: search
    restart: on-failure
    environment:
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - search_volume:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
networks:
  docportal_network:
    driver: bridge
volumes:
  node_modules:
  db_volume:
  search_volume:
    # For details, see:
    # https://docs.docker.com/engine/reference/commandline/volume_create/#driver-specific-options
    driver: local
    driver_opts:
      o: "size=50g"
      device: tmpfs
      type: tmpfs
