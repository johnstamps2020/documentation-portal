apiVersion: v1
kind: ConfigMap
metadata:
  name: ${ELASTICSEARCH_APP_NAME}-app-config-${DEPLOY_ENV}
  namespace: ${POD_NAME}
  labels:
    app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
data:
  discovery_type: single-node
  xpack_security_enabled: 'false'
  cluster_name: es-${DEPLOY_ENV}
  elasticsearch.yml: |
    cluster.name: es-${DEPLOY_ENV}
    network.host: 0.0.0.0
    path.data: /usr/share/elasticsearch/data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${ELASTICSEARCH_APP_NAME}-pv-claim-${DEPLOY_ENV}
  namespace: ${POD_NAME}
  labels:
    app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
  namespace: ${POD_NAME}
  labels:
    app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
spec:
  selector:
    matchLabels:
      app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
      namespace: ${POD_NAME}
      labels:
        app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
        gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
        gwcp.guidewire.com/maintained-by: ${POD_NAME}
        gwcp.guidewire.com/created-by: ${POD_NAME}
        gwcp.guidewire.com/tenant-name: ${POD_NAME}
        gwcp.guidewire.com/version: ${TAG_VERSION}
        gwcp.guidewire.com/app-name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:${TAG_VERSION}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: \"${REQUESTS_MEMORY}\"
              cpu: \"${REQUESTS_CPU}\"
            limits:
              memory: \"${LIMITS_MEMORY}\"
              cpu: \"${LIMITS_CPU}\"
          env:
            - name: discovery.type
              valueFrom:
                configMapKeyRef:
                  name: ${ELASTICSEARCH_APP_NAME}-app-config-${DEPLOY_ENV}
                  key: discovery_type
            - name: xpack.security.enabled
              valueFrom:
                configMapKeyRef:
                  name: ${ELASTICSEARCH_APP_NAME}-app-config-${DEPLOY_ENV}
                  key: xpack_security_enabled
            - name: cluster_name
              valueFrom:
                configMapKeyRef:
                  name: ${ELASTICSEARCH_APP_NAME}-app-config-${DEPLOY_ENV}
                  key: cluster_name
          ports:
            - containerPort: 9200
              name: http
              protocol: TCP
            - containerPort: 9300
              name: transport
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elasticsearch-storage
            - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              name: ${ELASTICSEARCH_APP_NAME}-app-config-${DEPLOY_ENV}
              subPath: elasticsearch.yml

      volumes:
        - name: elasticsearch-storage
          persistentVolumeClaim:
            claimName: ${ELASTICSEARCH_APP_NAME}-pv-claim-${DEPLOY_ENV}
        - name: ${ELASTICSEARCH_APP_NAME}-app-config-${DEPLOY_ENV}
          configMap:
            name: ${ELASTICSEARCH_APP_NAME}-app-config-${DEPLOY_ENV}
            items:
              - key: elasticsearch.yml
                path: elasticsearch.yml
---
apiVersion: v1
kind: Service
metadata:
  name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
  namespace: ${POD_NAME}
  labels:
    app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
spec:
  type: ClusterIP
  selector:
    app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
  ports:
    - name: http
      port: 9200
      protocol: TCP
    - name: transport
      port: 9300
      protocol: TCP
---
apiVersion: oort.ccs.guidewire.com/v1alpha1
kind: GatewayConfig
metadata:
  namespace: ${POD_NAME}
  name: ${ELASTICSEARCH_APP_NAME}-gateway-config-${DEPLOY_ENV}
  labels:
    app: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
spec:
  profiles:
    - name: Default
  path_configs:
    - name: Default
      paths:
        - /**
      profiles:
        - Default
  service_ref: ${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}
  service_alias: ${ELASTICSEARCH_APP_NAME}-${POD_NAME}
  enable_sub_domain: false
---
apiVersion: v1
kind: Service
metadata:
  name: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
  namespace: ${POD_NAME}
  labels:
    app: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
spec:
  ports:
    - port: 5601
  selector:
    app: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
  namespace: ${POD_NAME}
  labels:
    app: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
  template:
    metadata:
      name: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
      namespace: ${POD_NAME}
      labels:
        app: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
        gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
        gwcp.guidewire.com/maintained-by: ${POD_NAME}
        gwcp.guidewire.com/created-by: ${POD_NAME}
        gwcp.guidewire.com/tenant-name: ${POD_NAME}
        gwcp.guidewire.com/version: ${TAG_VERSION}
        gwcp.guidewire.com/app-name: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:${TAG_VERSION}
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
          env:
            - name: ELASTICSEARCH_HOSTS
              value: http://${ELASTICSEARCH_APP_NAME}-${DEPLOY_ENV}:9200
          ports:
            - containerPort: 5601
---
apiVersion: oort.ccs.guidewire.com/v1alpha1
kind: GatewayConfig
metadata:
  namespace: ${POD_NAME}
  name: ${KIBANA_APP_NAME}-${POD_NAME}-gateway-config-${DEPLOY_ENV}
  labels:
    app: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
    gwcp.guidewire.com/dept: \"${DEPT_CODE}\"
    gwcp.guidewire.com/maintained-by: ${POD_NAME}
    gwcp.guidewire.com/created-by: ${POD_NAME}
    gwcp.guidewire.com/tenant-name: ${POD_NAME}
    gwcp.guidewire.com/version: ${TAG_VERSION}
    gwcp.guidewire.com/app-name: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
spec:
  profiles:
    - name: Default
  path_configs:
    - name: Default
      paths:
        - /**
      profiles:
        - Default
  service_ref: ${KIBANA_APP_NAME}-${POD_NAME}-${DEPLOY_ENV}
  service_alias: ${KIBANA_APP_NAME}-${POD_NAME}
  enable_sub_domain: false
