<!DOCTYPE html>
<html lang="en">
<% include parts/head %>
<body>
<% include parts/header %>
<div class="docPanelContainer">
    <div class="container">
        <div class="row">
            <div class="col-sm-9">
                <div class="docPageTitle">
                    <h1 class="display-4">Self-managed products</h1>
                </div>
            </div>
            <div class="col-sm-3">
                <% include parts/switcher %>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-9">
                <div class="row">
                <%  let groups = docs.reduce((r, a) => {
                    if (a.metadata.platform === 'Self-managed') {
                        r[a.metadata.category] = [...r[a.metadata.category] || [], a];
                    }
                    return r;
                }, {});
                const groupArray = Object.entries(groups);
                groupArray.forEach(group => {
                    const groupName = group[0];
                    const groupItems = group[1]; -%>
                    <div class="col-sm-4 mt-3">
                        <div class="categoryCard">
                            <h2><%= groupName %></h2>
                            <div class="card-text">
                                <%  const products = groupItems.reduce((r, a) => {
                                    r[a.metadata.product] = [...r[a.metadata.product] || [], a];
                                    return r;
                                    }, {});
                                    const productArray = Object.entries(products);
                                    productArray.forEach(product => {
                                        const productTitle = product[0].trim();
                                        const productReleases = product[1];
                                        const versionsInProductGroup = productReleases.map(item => {
                                            return parseInt(item.metadata.version.replace(/\./g, ''));
                                        });
                                        const latestVersion = Math.max(...versionsInProductGroup);
                                        const doc = productReleases.find(item => parseInt(item.metadata.version.replace(/\./g, '')) === latestVersion);
                                        -%>
                                        <div class="docLink">
                                            <a href="<%= doc.url %>"><%= doc.title %></a>
                                        </div>
                                <% }) -%>
                            </div>
                        </div>
                    </div>
                <% }) -%>
                </div>
            </div>
            <div class="col-sm-3">
                <% include parts/useful-links %>
            </div>
        </div>
        <div class="row justify-content-center mt-5">
            <div class="col-auto">
                <a class="gwButtonPrimary" href="/self-managed-all-releases">See all releases</a>
            </div>
        </div>
    </div>
</div>
<% include parts/footer %>
</body>
</html>
