<!DOCTYPE html>
<html lang="en">
<% include parts/head %>
<body>
<% include parts/header %>
<div class="docPanelContainer">
    <div class="container">
        <div class="row">
            <div class="col-sm-9">
                <div class="docPageTitle docPageHeaderItems">
                    <h1 class="display-4">Self-managed product documentation</h1>
                    <p><a href="/self-managed-all-releases">See all releases</a></p>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="docPageHeaderItems">
                    <%- include('./parts/toggle.ejs', {selected: 'sm'}) %>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-9">
                <div class="row">
                    <% let groups = docs.reduce((r, a) => {
                        if (a.metadata.platform === 'Self-managed') {
                            r[a.metadata.category] = [...r[a.metadata.category] || [], a];
                        }
                        return r;
                    }, {});
                    const groupArray = Object.entries(groups);
                    groupArray.forEach(group => {
                        const groupName = group[0];
                        const groupItems = group[1]; -%>
                    <div class="col-sm-4">
                        <div class="categoryCard">
                            <h2><%= groupName %></h2>
                            <div class="card-text">
                                <% const products = groupItems.reduce((r, a) => {
                                    r[a.metadata.product] = [...r[a.metadata.product] || [], a];
                                    return r;
                                }, {});
                                    const productArray = Object.entries(products);
                                productArray.forEach(product => {
                                    const productReleases = product[1].filter(doc => (doc.visible !== false));
                                    const docsSortedFromLatestToOldest = productReleases.sort((a, b) => (parseInt(a.metadata.version) > parseInt(b.metadata.version)) ? -1 : 1)
                                    const doc = docsSortedFromLatestToOldest[0]
                                if (doc) {
                                -%>
                                    <div class="docLink">
                                        <a href="<%= doc.url %>"><%= doc.title %></a>
                                    </div>
                                <% } -%>
                                <% }) -%>
                            </div>
                        </div>
                    </div>
                    <% }) -%>
                </div>
            </div>
            <div class="col-sm-3">
                <% include parts/useful-links %>
            </div>
        </div>
    </div>
</div>
<% include parts/footer %>
</body>
</html>
