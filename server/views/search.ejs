<!DOCTYPE html>
<html lang="en">
<%- include('parts/head', { pageTitle: `${query} | ${totalNumOfResults} search results`}) %>
<body>
<%- include('parts/header', { hideSearchBox: true, hideLoginButton: false, headerClass: 'header-search' }) %>
<main class="fullWidth searchPage">
    <div class="filterSearchResults">
        <div>
            <div id="expandCollapseAllToggle">
                <span onclick="expandCollapseAllFilters(expandElements=true)" role="button" tabindex="0">
                    Expand all
                </span>
                <span onclick="expandCollapseAllFilters(expandElements=false)" role="button" tabindex="0">
                    Collapse all
                </span>
            </div>
            <% const displayOrder = ['platform', 'product', 'version', 'subject', 'doc_title'] %>
            <% displayOrder.forEach(key => { %>
                <% const matchingFilter = filters.find(f => f.name === key) %>
                <% if (matchingFilter) { %>
                    <% const filterValues = matchingFilter.values %>
                    <details class="expandableSection">
                        <summary>
                            <span class="summaryContainer">
                                <span class="summaryChevron" aria-label="expand/collapse icon"></span>
                                <%= matchingFilter.name.replace('_', ' ') %> (<%= filterValues.length %>)
                            </span>
                        </summary>
                        <div class="expandableSectionValues">
                            <% let sortedFilterValues = filterValues.sort(function (a, b) {
                                var labelA = a.label.toUpperCase();
                                var labelB = b.label.toUpperCase();
                                return (labelA < labelB) ? -1 : (labelA > labelB) ? 1 : 0;
                            })
                                if (matchingFilter.name === 'version') {
                                    sortedFilterValues = filterValues
                                            .sort(function (a, b) {
                                                const verNum = label =>
                                                        label
                                                                .split('.')
                                                                .map(n => +n + 100000)
                                                                .join('.');
                                                const verNumA = verNum(a.label);
                                                const verNumB = verNum(b.label);
                                                let comparison = 0;
                                                if (verNumA > verNumB) {
                                                    comparison = 1;
                                                } else if (verNumA < verNumB) {
                                                    comparison = -1;
                                                }
                                                return comparison;
                                            })
                                            .reverse()
                                } %>
                            <% sortedFilterValues.forEach(checkboxValue => { %>
                                <label class="checkboxRowContainer">
                                    <input type="checkbox" class="filterCheckbox" name="<%= matchingFilter.name %>"
                                           value="<%= checkboxValue.label %>"
                                    <% if (checkboxValue.checked) { %>
                                           checked="true"
                                            <% } %>
                                    />
                                    <span><%= checkboxValue.label %></span>
                                    <span class="docCount"><%= checkboxValue.doc_count %></span>
                                </label>
                            <% }) %>
                        </div>
                    </details>
                <% } %>
            <% }) %>
        </div>
    </div>
    <div class="resultWrapper">
        <% if (!userContext) { %>
            <div class="notLoggedInWarning">
                You are not logged in, search results are limited to public
                documents only.
            </div>
        <% } %>
        <div class="searchBoxWrapper">
            <form action="/search">
                <div class="searchWrapperLarge">
                    <input
                            name="q"
                            value="<%= query %>"
                            id="searchField"
                            class="searchField"
                            type="search"
                            placeholder="Search Guidewire documentation"
                            aria-label="Search Guidewire documentation"
                            aria-labelledby="submitSearch"
                            autofocus
                    />
                    <% filters.forEach(searchFilter => { %>
                        <% const checkedFilters = searchFilter.values.filter(filterValue => filterValue.checked) %>
                        <% if (checkedFilters.length > 0) { %>
                            <input type="hidden" name="<%= searchFilter.name %>"
                                   value="<%= checkedFilters.map(f => f.label).join(',') %>">
                        <% } %>
                    <% }) %>
                    <button id="submitSearch" type="submit" class="searchButton" aria-label="Search">
                        Search
                    </button>
                </div>
            </form>
        </div>
        <% if (totalNumOfResults > 0) { %>
            <h1>Search results for "<%= query %>"</h1>
            <div class="resultsSubheading">
                <span class="resultCount">Displaying <%= searchResults.length %> out of <%= totalNumOfResults
                    %> results
                    (page <%= currentPage %> of <%= pages %>)
                </span>
                <span id="highlightToggle" role="button"
                      onclick="enableDisableHighlight()" aria-label="Toggle search highlights"
                      title="Toggle search highlights"></span>
                <span class="paginationWrapper">
                    <label for="pagination">View items:</label>
                    <select id="pagination">
                        <% ['10', '25', '50', '100'].forEach(rpp => { %>
                            <option value="<%= rpp %>" <%= resultsPerPage === `${rpp}` ? 'selected' : '' %>><%= rpp %></option>
                        <% }) %>
                    </select>
                </span>
            </div>
            <div class="searchResults" id="searchResults">
                <% searchResults.forEach(result => { %>
                    <div class="searchResult">
                        <a href="<%= result.uniqueHighlightTerms
                                ? `${result.href}?hl=${result.uniqueHighlightTerms}`
                                : result.href %>">
                            <h2 class="searchResultTitle">
                                <%- result.title %>
                            </h2>
                        </a>
                        <div class="resultBadges">
                            <% result.docTags.forEach(tag => { %>
                                <% if (tag) { %>
                                    <% if (Array.isArray(tag)) { %>
                                        <% tag.forEach(value => { %>
                                            <span class="infoLabel"><%= value %></span>
                                        <% }) %>
                                    <% } else { %>
                                        <span class="infoLabel"><%= tag %></span>
                                    <% } %>
                                <% } %>
                            <% }) %>
                        </div>
                        <div class="resultBody"><%- result.body %></div>
                        <% if (result.inner_hits) {
                            let hitsToDisplay = [];
                            for (const innerHit of result.inner_hits) {
                                const hitLabel = innerHit._source.title;
                                const hitHref = innerHit._source.href;
                                const hitPlatform = innerHit._source.platform;
                                const hitProduct = innerHit._source.product;
                                const hitVersion = innerHit._source.version;
                                if (hitHref !== result.href) {
                                    hitsToDisplay.push({
                                        label: hitLabel,
                                        href: hitHref,
                                        tags: [...hitProduct, ...hitPlatform, ...hitVersion]
                                    });
                                }
                            }
                        if (hitsToDisplay.length > 0) { %>
                            <details class="expandableSection">
                                <summary>
                                    <span class="summaryContainer">
                                        <span class="summaryChevron" aria-label="expand/collapse icon"></span>
                                        <%= `Also found in ${hitsToDisplay.length} pages with the same title` %>
                                    </span>
                                </summary>
                                <div class="expandableSectionValues">
                                    <% for (const hit of hitsToDisplay) { %>
                                        <p class="otherHit">
                                            <a href="<%= result.uniqueHighlightTerms ? `${hit.href}?hl=${result.uniqueHighlightTerms}` : hit.href %>">
                                                <%= hit.tags.join(', ') %>
                                            </a>
                                        </p>
                                    <% } %>
                                </div>
                            </details>
                        <% } %>
                        <% } %>
                    </div>
                <% }) %>
            </div>
            <% if (pages > 1) { %>
                <ul class="pagination">
                    <% if (currentPage === 1) { %>
                        <li class="disabled">First</li>
                    <% } else { %>
                        <li>
                            <button onclick="setUrlParam('page', '1')">First</button>
                        </li>
                    <% } %>
                    <% var i = (Number(currentPage) > 5 ? Number(currentPage) -
                            4 : 1) %>
                    <% if (i !== 1) { %>
                        <li class="disabled">...</li>
                    <% } %>
                    <% for (; i <= (Number(currentPage) + 4) && i <= pages; i++)
                    { %> <% if (i === currentPage) { %>
                        <li class="disabled"><%= i %></li>
                    <% } else { %>
                        <li>
                            <button onclick="setUrlParam('page', <%= i %>)">
                                <%= i %>
                            </button>
                        </li>
                    <% } %> <% if (i === Number(currentPage) + 4 && i < pages) { %>
                        <li class="disabled">...</li>
                    <% } %>
                    <% } %>
                    <% if (currentPage === pages) { %>
                        <li class="disabled">Last</li>
                    <% } else { %>
                        <li>
                            <button onclick="setUrlParam('page', <%= pages %>)">
                                Last
                            </button>
                        </li>
                    <% } %>
                </ul>
            <% } %>
        <% } else { %>
            <h1>Sorry, your search for "<%= query %>" returned no results.</h1>
        <% } %>
    </div>
</main>
<script>
    function setUrlParam(paramName, paramValue) {
        const url = new URL(window.location.href);
        const queryString = url.search;
        const searchParams = new URLSearchParams(queryString);

        if (('' + paramValue).length === 0) {
            if (searchParams.has(paramName)) {
                searchParams.delete(paramName);
            }
        } else {
            if (searchParams.has(paramName)) {
                searchParams.set(paramName, paramValue)
            } else {
                searchParams.append(paramName, paramValue);
            }
        }

        if (paramName !== 'page' && searchParams.has('page')) {
            searchParams.delete('page');
        }

        url.search = searchParams.toString();
        window.location.href = url.toString();
    }

    function updateFilters(e) {

        const neighbors = document.getElementsByName(e.target.name);
        let selectedValues = [];
        Array.prototype.forEach.call(neighbors, function (cb) {
            if (cb.checked) {
                selectedValues.push(cb.value);
            }
        });

        setUrlParam(e.target.name, encodeURI(selectedValues.join(',')));
    }

    const pagination = document.getElementById('pagination');
    if (pagination) {
        pagination.addEventListener('change', function (e) {
            const selectTag = e.target;
            if (selectTag.selectedIndex !== -1) {
                const selectedValue = selectTag.options[selectTag.selectedIndex].value;
                setUrlParam('pagination', selectedValue);
            }
        });
    }

    const allBoxes = document.getElementsByClassName('filterCheckbox');
    if (allBoxes) {
        Array.prototype.forEach.call(allBoxes, function (box) {
            box.addEventListener('change', updateFilters, false);
        });
    }

    function expandCollapseAllFilters(expandElements) {
        const expandableFiltersElements = document.querySelectorAll('div.filterSearchResults .expandableSection');
        for (const expandableFilter of expandableFiltersElements) {
            expandElements ? expandableFilter.setAttribute('open', '') : expandableFilter.removeAttribute('open');
        }
    }

    function expandCheckedFilters() {
        const expandableFiltersElements = document.querySelectorAll('div.filterSearchResults .expandableSection');
        for (const expandableFilter of expandableFiltersElements) {
            const filterValues = expandableFilter.querySelector('div[class="expandableSectionValues"]');
            for (const filterValue of filterValues.children) {
                if (filterValue.querySelector('input[checked="true"]')) {
                    expandableFilter.setAttribute('open', '')
                    break
                }
            }
        }
    }

    function enableDisableHighlight() {
        const highlightToggleElement = document.getElementById('highlightToggle');
        const highlightedElements = document.getElementsByClassName('searchResultHighlight');
        if (highlightToggleElement.classList.contains('highlightDisabled')) {
            highlightToggleElement.classList.remove('highlightDisabled')
            for (const highlightedElement of highlightedElements) {
                highlightedElement.classList.add('highlighted');
            }
        } else {
            highlightToggleElement.classList.add('highlightDisabled')
            for (const highlightedElement of highlightedElements) {
                highlightedElement.classList.remove('highlighted');
            }
        }
    }


    expandCheckedFilters();

</script>
</body>
<%- include('parts/footer', { footerClass: 'footer-search' }) %>
</html>
